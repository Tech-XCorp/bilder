#!/bin/bash
#
# $Id: peregrine.gcc 109 2013-03-01 09:10:58Z swsides $
#
# Define variables.
# Do not override existing definitions.
# Put any comments between the first block starting with '# KEEP THIS'
# and ending with '# END KEEP THIS'
#
######################################################################

# KEEP THIS
# These contents are not sourced or changed on a file update, but
# they are sourced for an actual build.
# cmd="mkdir -p /scratch/$USER/tmp"
# techo "$cmd"
# $cmd
# cmd="export TMP=/scratch/$USER/tmp"
# techo "$cmd"
# $cmd

USE_CCXX_PIC_FLAG=false    # Use PIC for C and CXX
USE_FORTRAN_PIC_FLAG=false # Use PIC for Fortran

#
# Module dependency
#
module purge
module load gcc
module load subversion

echo " "
module list
echo " "

export LD_LIBRARY_PATH="/nopt/intel/13.0/composer_xe_2013.3.163/compiler/lib/intel64":$LD_LIBRARY_PATH

echo " "
echo "LD_LIBRARY_PATH =$LD_LIBRARY_PATH"
echo " "

# END KEEP THIS

# Serial compilers
# FC should be a compiler that compiles F77 or F90 but takes free format.
# F77 should be a compiler that compiles F77 or F90 but takes fixed format.
# Typically this means that both are the F90 compiler, and they figure out the
# format from the file suffix.  The exception is the XL suite, where xlf
# compiles F77 or F90, and expects fixed format, while xlf9x ignores
# the suffix and looks for the -qfixed flag or else fails on fixed format.
# CC=${CC:-"icc"}
# CXX=${CXX:-"icpc"}
# FC=${FC:-"ifort"}
# F77=${F77:-"ifort"}

# Python builds -- much use gcc for consistency.
# PYC_CC=${PYC_CC:-""}
# PYC_CXX=${PYC_CXX:-""}
# PYC_FC=${PYC_FC:-""}
# PYC_F77=${PYC_F77:-""}

# Parallel compilers:
# MPICC=${MPICC:-"mpiicc"}
# MPICXX=${MPICXX:-"mpiicpc"}
# MPIFC=${MPIFC:-"mpiifort"}
# MPIF77=${MPIF77:-"mpiifort"}
# MPIF90=${MPIF90:-"mpiifort"}

# Compilation flags:
# Do not set optimization flags as packages should add good defaults
# pic flags are added later

# Serial
CFLAGS=${CFLAGS:-"-fPIC -O2"}
CXXFLAGS=${CXXFLAGS:-"-fPIC -O2"}
# FCFLAGS=${FCFLAGS:-""}
# FFLAGS=${FFLAGS:-""}

# Parallel
# MPI_CFLAGS=${MPI_CFLAGS:-"-lmpi -mkl"}
# MPI_CXXFLAGS=${MPI_CXXFLAGS:-"-lmpi -mkl"}
# MPI_FCFLAGS=${MPI_FCFLAGS:-"-lmpi -mkl"}
# MPI_FFLAGS=${MPI_FFLAGS:-"-lmpi -mkl"}

# Java options
# export _JAVA_OPTIONS=

# Choose preferred buildsystem
# PREFER_CMAKE=${PREFER_CMAKE:-""}

# Variables for the packages, .
# All variables override defaults in files in bilder/packages.
# <PKG>_BLDRVERSION contains the version to be built.
# <PKG>_BUILDS contains the desired builds. Use of NOBUILD is deprecated.
# <PKG>_<BUILD>_OTHER_ARGS contains the other configuration arguments
#   for build <BUILD>.  If a package could have a cmake or an autotools
#   build, then the variables are <PKG>_<BUILD>_CMAKE_OTHER_ARGS
#   and <PKG>_<BUILD>_CONFIG_OTHER_ARGS


# ATLAS_BLDRVERSION=${ATLAS_BLDRVERSION:-""}
# ATLAS_BUILDS=${ATLAS_BUILDS:-""}
# ATLAS_CC4PY_OTHER_ARGS=${ATLAS_CC4PY_OTHER_ARGS:-""}
# ATLAS_CLP_OTHER_ARGS=${ATLAS_CLP_OTHER_ARGS:-""}
# ATLAS_SER_OTHER_ARGS=${ATLAS_SER_OTHER_ARGS:-""}

# BOOST_BLDRVERSION=${BOOST_BLDRVERSION:-""}
# BOOST_BUILDS=${BOOST_BUILDS:-""}
# BOOST_SER_OTHER_ARGS=${BOOST_SER_OTHER_ARGS:-""}

# BZIP2_BLDRVERSION=${BZIP2_BLDRVERSION:-""}
# BZIP2_BUILDS=${BZIP2_BUILDS:-""}
# BZIP2_SER_OTHER_ARGS=${BZIP2_SER_OTHER_ARGS:-""}

# CHOMBO_BLDRVERSION=${CHOMBO_BLDRVERSION:-""}
# CHOMBO_BUILDS=${CHOMBO_BUILDS:-""}
# CHOMBO_PAR2D_OTHER_ARGS=${CHOMBO_PAR2D_OTHER_ARGS:-""}
# CHOMBO_PAR2DDBG_OTHER_ARGS=${CHOMBO_PAR2DDBG_OTHER_ARGS:-""}
# CHOMBO_PAR3D_OTHER_ARGS=${CHOMBO_PAR3D_OTHER_ARGS:-""}
# CHOMBO_PAR3DDBG_OTHER_ARGS=${CHOMBO_PAR3DDBG_OTHER_ARGS:-""}
# CHOMBO_SER2D_OTHER_ARGS=${CHOMBO_SER2D_OTHER_ARGS:-""}
# CHOMBO_SER2DDBG_OTHER_ARGS=${CHOMBO_SER2DDBG_OTHER_ARGS:-""}
# CHOMBO_SER3D_OTHER_ARGS=${CHOMBO_SER3D_OTHER_ARGS:-""}
# CHOMBO_SER3DDBG_OTHER_ARGS=${CHOMBO_SER3DDBG_OTHER_ARGS:-""}

# CMAKE_BLDRVERSION=${CMAKE_BLDRVERSION:-""}
# CMAKE_BUILDS=${CMAKE_BUILDS:-""}
# CMAKE_SER_OTHER_ARGS=${CMAKE_SER_OTHER_ARGS:-""}

# DAKOTA_BLDRVERSION=${DAKOTA_BLDRVERSION:-""}
# DAKOTA_BUILDS=${DAKOTA_BUILDS:-""}
# DAKOTA_PAR_OTHER_ARGS=${DAKOTA_PAR_OTHER_ARGS:-""}
# DAKOTA_SER_OTHER_ARGS=${DAKOTA_SER_OTHER_ARGS:-""}

# DOXYGEN_BLDRVERSION=${DOXYGEN_BLDRVERSION:-""}
# DOXYGEN_BUILDS=${DOXYGEN_BUILDS:-""}
# DOXYGEN_SER_OTHER_ARGS=${DOXYGEN_SER_OTHER_ARGS:-""}

#
# FFTW
#
# FFTW_BLDRVERSION=${FFTW_BLDRVERSION:-""}
# FFTW_BUILDS=${FFTW_BUILDS:-"ser,par"}         # need this?
# FFTW_BEN_OTHER_ARGS=${FFTW_BEN_OTHER_ARGS:-""}
# FFTW_PAR_OTHER_ARGS=${FFTW_PAR_OTHER_ARGS:-"--disable-fortran --enable-mpi"}
# FFTW_SER_OTHER_ARGS=${FFTW_SER_OTHER_ARGS:-"--disable-fortran --disable-mpi"}

# FFTW3_BLDRVERSION=${FFTW3_BLDRVERSION:-""}
# FFTW3_BUILDS=${FFTW3_BUILDS:-""}
# FFTW3_BEN_OTHER_ARGS=${FFTW3_BEN_OTHER_ARGS:-""}
# FFTW3_PAR_OTHER_ARGS=${FFTW3_PAR_OTHER_ARGS:-""}
# FFTW3_SER_OTHER_ARGS=${FFTW3_SER_OTHER_ARGS:-""}

# GPULIB_BLDRVERSION=${GPULIB_BLDRVERSION:-""}
# GPULIB_BUILDS=${GPULIB_BUILDS:-""}
# GPULIB_GPU_OTHER_ARGS=${GPULIB_GPU_OTHER_ARGS:-""}

#
# HDF5
#   not sure why fortran having a problem on peregrine
#   may have problem with other compiler chains
#
# HDF5_BLDRVERSION=${HDF5_BLDRVERSION:-""}
HDF5_BUILDS=${HDF5_BUILDS:-"ser,sersh,par"}
# HDF5_CC4PY_OTHER_ARGS=${HDF5_CC4PY_OTHER_ARGS:-""}
HDF5_PAR_OTHER_ARGS=${HDF5_PAR_OTHER_ARGS:-"-DHDF5_BUILD_FORTRAN:BOOL=OFF -DHDF5_BUILD_TOOLS:BOOL=OFF -DHDF5_BUILD_HL_LIB:BOOL=OFF"}
HDF5_SER_OTHER_ARGS=${HDF5_SER_OTHER_ARGS:-"-DHDF5_BUILD_FORTRAN:BOOL=OFF -DHDF5_BUILD_TOOLS:BOOL=ON  -DHDF5_BUILD_HL_LIB:BOOL=ON"}
HDF5_SERSH_OTHER_ARGS=${HDF5_SERSH_OTHER_ARGS:-"-DHDF5_BUILD_FORTRAN:BOOL=OFF -DHDF5_BUILD_TOOLS:BOOL=ON  -DHDF5_BUILD_HL_LIB:BOOL=ON"}
# HDF5_PARSH_OTHER_ARGS=${HDF5_PARSH_OTHER_ARGS:-""}
# HDF5_SER_OTHER_ARGS=${HDF5_SER_OTHER_ARGS:-""}

# HYPRE_BLDRVERSION=${HYPRE_BLDRVERSION:-""}
# HYPRE_BUILDS=${HYPRE_BUILDS:-""}
# HYPRE_PAR_OTHER_ARGS=${HYPRE_PAR_OTHER_ARGS:-""}
# HYPRE_PARSH_OTHER_ARGS=${HYPRE_PARSH_OTHER_ARGS:-""}

# LAPACK_BLDRVERSION=${LAPACK_BLDRVERSION:-""}
# LAPACK_BUILDS=${LAPACK_BUILDS:-""}
# LAPACK_BEN_OTHER_ARGS=${LAPACK_BEN_OTHER_ARGS:-""}
# LAPACK_CC4PY_OTHER_ARGS=${LAPACK_CC4PY_OTHER_ARGS:-""}
# LAPACK_SER_OTHER_ARGS=${LAPACK_SER_OTHER_ARGS:-""}
# LAPACK_SERSH_OTHER_ARGS=${LAPACK_SERSH_OTHER_ARGS:-""}

# LIBTOOL_BLDRVERSION=${LIBTOOL_BLDRVERSION:-""}
# LIBTOOL_BUILDS=${LIBTOOL_BUILDS:-""}
# LIBTOOL_SER_OTHER_ARGS=${LIBTOOL_SER_OTHER_ARGS:-""}

# MATHJAX_BLDRVERSION=${MATHJAX_BLDRVERSION:-""}
# MATHJAX_BUILDS=${MATHJAX_BUILDS:-""}
# MATHJAX_FULL_OTHER_ARGS=${MATHJAX_FULL_OTHER_ARGS:-""}
# MATHJAX_LITE_OTHER_ARGS=${MATHJAX_LITE_OTHER_ARGS:-""}

# MATPLOTLIB_BLDRVERSION=${MATPLOTLIB_BLDRVERSION:-""}
# MATPLOTLIB_BUILDS=${MATPLOTLIB_BUILDS:-""}
# MATPLOTLIB_CC4PY_OTHER_ARGS=${MATPLOTLIB_CC4PY_OTHER_ARGS:-""}

# NETCDF_BLDRVERSION=${NETCDF_BLDRVERSION:-""}
# NETCDF_BUILDS=${NETCDF_BUILDS:-""}
# NETCDF_BEN_OTHER_ARGS=${NETCDF_BEN_OTHER_ARGS:-""}
# NETCDF_CC4PY_OTHER_ARGS=${NETCDF_CC4PY_OTHER_ARGS:-""}
# NETCDF_PAR_OTHER_ARGS=${NETCDF_PAR_OTHER_ARGS:-""}
# NETCDF_SER_OTHER_ARGS=${NETCDF_SER_OTHER_ARGS:-""}

# PCRE_BLDRVERSION=${PCRE_BLDRVERSION:-""}
# PCRE_BUILDS=${PCRE_BUILDS:-""}
# PCRE_SER_OTHER_ARGS=${PCRE_SER_OTHER_ARGS:-""}

# PETSC_BLDRVERSION=${PETSC_BLDRVERSION:-""}
# PETSC_BUILDS=${PETSC_BUILDS:-""}
# PETSC_PAR_OTHER_ARGS=${PETSC_PAR_OTHER_ARGS:-""}
# PETSC_PARCPLX_OTHER_ARGS=${PETSC_PARCPLX_OTHER_ARGS:-""}
# PETSC_PARCPLXDBG_OTHER_ARGS=${PETSC_PARCPLXDBG_OTHER_ARGS:-""}
# PETSC_PARDBG_OTHER_ARGS=${PETSC_PARDBG_OTHER_ARGS:-""}
# PETSC_SER_OTHER_ARGS=${PETSC_SER_OTHER_ARGS:-""}
# PETSC_SERCPLX_OTHER_ARGS=${PETSC_SERCPLX_OTHER_ARGS:-""}

# PETSC4PY_BLDRVERSION=${PETSC4PY_BLDRVERSION:-""}
# PETSC4PY_BUILDS=${PETSC4PY_BUILDS:-""}
# PETSC4PY_CC4PY_OTHER_ARGS=${PETSC4PY_CC4PY_OTHER_ARGS:-""}

#
# Python
#
# PYTHON_BLDRVERSION=${PYTHON_BLDRVERSION:-""}
# PYTHON_BUILDS=${PYTHON_BUILDS:-"NONE"}
# PYTHON_CC4PY_OTHER_ARGS=${PYTHON_CC4PY_OTHER_ARGS:-""}

# PYTHONOCC_BLDRVERSION=${PYTHONOCC_BLDRVERSION:-""}
# PYTHONOCC_BUILDS=${PYTHONOCC_BUILDS:-""}
# PYTHONOCC_CC4PY_OTHER_ARGS=${PYTHONOCC_CC4PY_OTHER_ARGS:-""}

# QD_BLDRVERSION=${QD_BLDRVERSION:-""}
# QD_BUILDS=${QD_BUILDS:-""}
# QD_SER_OTHER_ARGS=${QD_SER_OTHER_ARGS:-""}

# R_BLDRVERSION=${R_BLDRVERSION:-""}
# R_BUILDS=${R_BUILDS:-""}
# R_SER_OTHER_ARGS=${R_SER_OTHER_ARGS:-""}

# SUBVERSION_BLDRVERSION=${SUBVERSION_BLDRVERSION:-""}
# SUBVERSION_BUILDS=${SUBVERSION_BUILDS:-""}
# SUBVERSION_SER_OTHER_ARGS=${SUBVERSION_SER_OTHER_ARGS:-""}

# SUPERLU_BLDRVERSION=${SUPERLU_BLDRVERSION:-""}
# SUPERLU_BUILDS=${SUPERLU_BUILDS:-""}
# SUPERLU_SER_OTHER_ARGS=${SUPERLU_SER_OTHER_ARGS:-""}
# SUPERLU_SERSH_OTHER_ARGS=${SUPERLU_SERSH_OTHER_ARGS:-""}

# SUPERLU_DIST_BLDRVERSION=${SUPERLU_DIST_BLDRVERSION:-""}
# SUPERLU_DIST_BUILDS=${SUPERLU_DIST_BUILDS:-""}
# SUPERLU_DIST_PAR_OTHER_ARGS=${SUPERLU_DIST_PAR_OTHER_ARGS:-""}
# SUPERLU_DIST_PARCOMM_OTHER_ARGS=${SUPERLU_DIST_PARCOMM_OTHER_ARGS:-""}
# SUPERLU_DIST_PARCOMMSH_OTHER_ARGS=${SUPERLU_DIST_PARCOMMSH_OTHER_ARGS:-""}
# SUPERLU_DIST_PARSH_OTHER_ARGS=${SUPERLU_DIST_PARSH_OTHER_ARGS:-""}

# SWIG_BLDRVERSION=${SWIG_BLDRVERSION:-""}
# SWIG_BUILDS=${SWIG_BUILDS:-""}
# SWIG_SER_OTHER_ARGS=${SWIG_SER_OTHER_ARGS:-""}

# TABLES_BLDRVERSION=${TABLES_BLDRVERSION:-""}
# TABLES_BUILDS=${TABLES_BUILDS:-""}
# TABLES_CC4PY_OTHER_ARGS=${TABLES_CC4PY_OTHER_ARGS:-""}

# TRILINOS_BLDRVERSION=${TRILINOS_BLDRVERSION:-""}
# TRILINOS_BUILDS=${TRILINOS_BUILDS:-""}
# TRILINOS_PARBARE_OTHER_ARGS=${TRILINOS_PARBARE_OTHER_ARGS:-""}
# TRILINOS_PARBARESH_OTHER_ARGS=${TRILINOS_PARBARESH_OTHER_ARGS:-""}
# TRILINOS_PARCOMM_OTHER_ARGS=${TRILINOS_PARCOMM_OTHER_ARGS:-""}
# TRILINOS_PARCOMMSH_OTHER_ARGS=${TRILINOS_PARCOMMSH_OTHER_ARGS:-""}
# TRILINOS_PARFULL_OTHER_ARGS=${TRILINOS_PARFULL_OTHER_ARGS:-""}
# TRILINOS_PARFULLSH_OTHER_ARGS=${TRILINOS_PARFULLSH_OTHER_ARGS:-""}
# TRILINOS_SERBARE_OTHER_ARGS=${TRILINOS_SERBARE_OTHER_ARGS:-""}
# TRILINOS_SERBARESH_OTHER_ARGS=${TRILINOS_SERBARESH_OTHER_ARGS:-""}
# TRILINOS_SERCOMM_OTHER_ARGS=${TRILINOS_SERCOMM_OTHER_ARGS:-""}
# TRILINOS_SERCOMMSH_OTHER_ARGS=${TRILINOS_SERCOMMSH_OTHER_ARGS:-""}
# TRILINOS_SERFULL_OTHER_ARGS=${TRILINOS_SERFULL_OTHER_ARGS:-""}
# TRILINOS_SERFULLSH_OTHER_ARGS=${TRILINOS_SERFULLSH_OTHER_ARGS:-""}

# TXBASE_BLDRVERSION=${TXBASE_BLDRVERSION:-""}
# TXBASE_BUILDS=${TXBASE_BUILDS:-"ser,par"}
# TXBASE_CC4PY_OTHER_ARGS=${TXBASE_CC4PY_OTHER_ARGS:-""}
# TXBASE_PAR_OTHER_ARGS=${TXBASE_PAR_OTHER_ARGS:-""}
# TXBASE_PARSH_OTHER_ARGS=${TXBASE_PARSH_OTHER_ARGS:-""}
# TXBASE_SER_OTHER_ARGS=${TXBASE_SER_OTHER_ARGS:-""}
# TXBASE_SERSH_OTHER_ARGS=${TXBASE_SERSH_OTHER_ARGS:-""}

# TXBTESTS_BLDRVERSION=${TXBTESTS_BLDRVERSION:-""}
# TXBTESTS_BUILDS=${TXBTESTS_BUILDS:-""}
# TXBTESTS_ALL_OTHER_ARGS=${TXBTESTS_ALL_OTHER_ARGS:-""}

# VALGRIND_BLDRVERSION=${VALGRIND_BLDRVERSION:-""}
# VALGRIND_BUILDS=${VALGRIND_BUILDS:-""}
# VALGRIND_SER_OTHER_ARGS=${VALGRIND_SER_OTHER_ARGS:-""}

# VISIT_BLDRVERSION=${VISIT_BLDRVERSION:-""}
# VISIT_BUILDS=${VISIT_BUILDS:-""}
# VISIT_PAR_OTHER_ARGS=${VISIT_PAR_OTHER_ARGS:-""}
# VISIT_SER_OTHER_ARGS=${VISIT_SER_OTHER_ARGS:-""}

# VISIT_VTK_BLDRVERSION=${VISIT_VTK_BLDRVERSION:-""}
# VISIT_VTK_BUILDS=${VISIT_VTK_BUILDS:-""}
# VISIT_VTK_SER_OTHER_ARGS=${VISIT_VTK_SER_OTHER_ARGS:-""}

# VTK_BLDRVERSION=${VTK_BLDRVERSION:-""}
# VTK_BUILDS=${VTK_BUILDS:-""}
# VTK_SER_OTHER_ARGS=${VTK_SER_OTHER_ARGS:-""}

# XZ_BLDRVERSION=${XZ_BLDRVERSION:-""}
# XZ_BUILDS=${XZ_BUILDS:-""}
# XZ___OTHER_ARGS=${XZ___OTHER_ARGS:-""}

# ZEROMQ_BLDRVERSION=${ZEROMQ_BLDRVERSION:-""}
# ZEROMQ_BUILDS=${ZEROMQ_BUILDS:-""}
# ZEROMQ_CC4PY_OTHER_ARGS=${ZEROMQ_CC4PY_OTHER_ARGS:-""}

# ZLIB_BLDRVERSION=${ZLIB_BLDRVERSION:-""}
# ZLIB_BUILDS=${ZLIB_BUILDS:-""}
# ZLIB_SER_OTHER_ARGS=${ZLIB_SER_OTHER_ARGS:-""}
# ZLIB_SERSH_OTHER_ARGS=${ZLIB_SERSH_OTHER_ARGS:-""}

