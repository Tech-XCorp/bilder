diff -ruN trilinos-11.12.1/packages/amesos/CMakeLists.txt trilinos-11.12.1-new/packages/amesos/CMakeLists.txt
--- trilinos-11.12.1/packages/amesos/CMakeLists.txt	2014-10-08 15:14:24.000000000 -0600
+++ trilinos-11.12.1-new/packages/amesos/CMakeLists.txt	2014-12-05 02:37:53.939103460 -0700
@@ -11,9 +11,13 @@
 #
 
 # if using SuperLUDist, must also link in ParMETIS for some reason
+# JRC: Because it is now a dependency that would go away if Sherry Li
+# would accept Tech-X changes
+if (NOT TPL_ENABLE_SuperLUDist_Without_ParMETIS)
 IF(${PACKAGE_NAME}_ENABLE_SuperLUDist AND NOT ${PACKAGE_NAME}_ENABLE_ParMETIS)
   MESSAGE(FATAL_ERROR "The Amesos support for the SuperLUIDist TPL requires the ParMETIS TPL.  Either disable Amesos SuperLUDist support or enable the ParMETIS TPL.")
 ENDIF()
+ENDIF()
 
 # if using parallel MUMPS, must also link in scalapack and BLACS
 
diff -ruN trilinos-11.12.1/packages/amesos/CMakeLists.txt.orig trilinos-11.12.1-new/packages/amesos/CMakeLists.txt.orig
--- trilinos-11.12.1/packages/amesos/CMakeLists.txt.orig	1969-12-31 17:00:00.000000000 -0700
+++ trilinos-11.12.1-new/packages/amesos/CMakeLists.txt.orig	2014-10-08 15:14:24.000000000 -0600
@@ -0,0 +1,148 @@
+
+
+#
+# A) Define the package
+#
+
+TRIBITS_PACKAGE(Amesos)
+
+#
+# B) Set up package-specific options
+#
+
+# if using SuperLUDist, must also link in ParMETIS for some reason
+IF(${PACKAGE_NAME}_ENABLE_SuperLUDist AND NOT ${PACKAGE_NAME}_ENABLE_ParMETIS)
+  MESSAGE(FATAL_ERROR "The Amesos support for the SuperLUIDist TPL requires the ParMETIS TPL.  Either disable Amesos SuperLUDist support or enable the ParMETIS TPL.")
+ENDIF()
+
+# if using parallel MUMPS, must also link in scalapack and BLACS
+
+IF(${PACKAGE_NAME}_ENABLE_MUMPS AND ${PACKAGE_NAME}_ENABLE_MPI AND NOT ${PACKAGE_NAME}_ENABLE_SCALAPACK)
+  MESSAGE(FATAL_ERROR "The Amesos support for parallel MUMPS requires SCALAPACK.")
+ENDIF()
+
+IF(${PACKAGE_NAME}_ENABLE_MUMPS AND ${PACKAGE_NAME}_ENABLE_MPI AND NOT ${PACKAGE_NAME}_ENABLE_BLACS)
+  MESSAGE(FATAL_ERROR "The Amesos support for parallel MUMPS requires BLACS.")
+ENDIF()
+
+## Most of the options below are bogus.  The handling of TPLs is done
+## through the dependencies file.  This needs to be cleaned up. I'm
+## leaving them for now so that we have a list of all options.  They
+## will be removed as correct TPL support is added.
+
+TRIBITS_ADD_OPTION_AND_DEFINE(${PACKAGE_NAME}_ENABLE_DSCPACK
+  HAVE_AMESOS_DSCPACK
+  "Enable DSCPACK functionality."
+  OFF )
+
+TRIBITS_ADD_OPTION_AND_DEFINE(${PACKAGE_NAME}_ENABLE_MC64
+  HAVE_AMESOS_MC64
+  "Enable MC64 functionality."
+  OFF )
+
+TRIBITS_ADD_OPTION_AND_DEFINE(${PACKAGE_NAME}_ENABLE_KLU
+  HAVE_AMESOS_KLU
+  "Enable KLU (Tim Davis's Files)."
+  ON )
+
+TRIBITS_ADD_OPTION_AND_DEFINE(${PACKAGE_NAME}_ENABLE_PARDISO
+  HAVE_AMESOS_PARDISO
+  "Enable PARDISO functionality."
+  OFF )
+
+TRIBITS_ADD_OPTION_AND_DEFINE(${PACKAGE_NAME}_ENABLE_PARDISO_MKL
+  HAVE_AMESOS_PARDISO_MKL
+  "Enable PARDISO functionality."
+  OFF )
+
+TRIBITS_ADD_OPTION_AND_DEFINE(${PACKAGE_NAME}_ENABLE_PARAKLETE
+  HAVE_AMESOS_PARAKLETE
+  "Enable PARAKLETE functionality."
+  OFF )
+
+TRIBITS_ADD_OPTION_AND_DEFINE(${PACKAGE_NAME}_ENABLE_LAPACK
+  HAVE_AMESOS_LAPACK
+  "Enable LAPACK functionality."
+  ON )
+  
+# ...
+
+#
+# C) Add the libraries, tests, and examples
+#
+
+ADD_SUBDIRECTORY(src)
+
+TRIBITS_ADD_TEST_DIRECTORIES(test)
+
+TRIBITS_ADD_EXAMPLE_DIRECTORIES(example)
+
+#
+# Exclude files for source package.
+#
+
+TRIBITS_EXCLUDE_AUTOTOOLS_FILES()
+
+TRIBITS_EXCLUDE_FILES(
+  doc/AmesosOverview
+  doc/PARA06
+  example/RunParaklete.cpp
+  example/Thyra_AmesosLinearOpWithSolveFactory.cpp
+  example/pk.h
+  example/run_pk.c
+  example/simpleStratimikosSolve.cpp
+  example/simpleStratimikosSolve.hpp
+  example/stratimikos_example.cpp
+  src/Amesos_BTF.h
+  src/Amesos_Component.h
+  src/Amesos_Merikos.h
+  src/Amesos_BTF.h
+  src/SuiteSparse/CAMD/Source/amesos_camd_1.c
+  src/SuiteSparse/CAMD/Source/amesos_camd_aat.c
+  src/SuiteSparse/CAMD/Source/amesos_camd_control.c
+  src/SuiteSparse/CAMD/Source/amesos_camd_defaults.c
+  src/SuiteSparse/CAMD/Source/amesos_camd_dump.c
+  src/SuiteSparse/CAMD/Source/amesos_camd_info.c
+  src/SuiteSparse/CAMD/Source/amesos_camd_order.c
+  src/SuiteSparse/CAMD/Source/amesos_camd_preprocess.c
+  src/SuiteSparse/CAMD/Source/amesos_camd_valid.c
+  src/SuiteSparse/CCOLAMD/Source/amesos_ccolamd.c
+  src/SuiteSparse/CHOLMOD/Cholesky/amesos_cholmod_amd.c
+  src/SuiteSparse/CHOLMOD/Cholesky/amesos_cholmod_analyze.c
+  src/SuiteSparse/CHOLMOD/Cholesky/amesos_cholmod_colamd.c
+  src/SuiteSparse/CHOLMOD/Cholesky/amesos_cholmod_etree.c
+  src/SuiteSparse/CHOLMOD/Cholesky/amesos_cholmod_factorize.c
+  src/SuiteSparse/CHOLMOD/Cholesky/amesos_cholmod_postorder.c
+  src/SuiteSparse/CHOLMOD/Cholesky/amesos_cholmod_rcond.c
+  src/SuiteSparse/CHOLMOD/Cholesky/amesos_cholmod_resymbol.c
+  src/SuiteSparse/CHOLMOD/Cholesky/amesos_cholmod_rowcolcounts.c
+  src/SuiteSparse/CHOLMOD/Cholesky/amesos_cholmod_rowfac.c
+  src/SuiteSparse/CHOLMOD/Cholesky/amesos_cholmod_solve.c
+  src/SuiteSparse/CHOLMOD/Cholesky/amesos_cholmod_spsolve.c
+  src/SuiteSparse/CHOLMOD/Cholesky/amesos_t_cholmod_rowfac.c
+  src/SuiteSparse/CHOLMOD/Core/amesos_cholmod_aat.c
+  src/SuiteSparse/CHOLMOD/Core/amesos_cholmod_add.c
+  src/SuiteSparse/CHOLMOD/Core/amesos_cholmod_band.c
+  src/SuiteSparse/CHOLMOD/Core/amesos_cholmod_change_factor.c
+  src/SuiteSparse/CHOLMOD/Core/amesos_cholmod_copy.c
+  src/SuiteSparse/CHOLMOD/Core/amesos_cholmod_dense.c
+  src/SuiteSparse/CHOLMOD/Core/amesos_cholmod_factor.c
+  src/SuiteSparse/CHOLMOD/Partition/amesos_cholmod_camd.c
+  src/SuiteSparse/CHOLMOD/Partition/amesos_cholmod_ccolamd.c
+  src/SuiteSparse/CHOLMOD/Partition/amesos_cholmod_csymamd.c
+  src/SuiteSparse/CHOLMOD/Partition/amesos_cholmod_metis.c
+  src/SuiteSparse/CHOLMOD/Partition/amesos_cholmod_nesdis.c
+  src/src-repository
+  src/stamp-h.in
+  test/TestOptions/Dummy
+  test/Test_Basic/NotQuiteDense.triU
+  test/Test_Performance/In_Test_UmfpackPerformance.csh
+  test/scripts/daily/mpi/TestBasic.sh
+  test/scripts/daily/serial/TestAmesos.sh
+  )
+
+#
+# D) Do standard postprocessing
+#
+
+TRIBITS_PACKAGE_POSTPROCESS()
diff -ruN trilinos-11.12.1/packages/ifpack/src/supportgraph/Ifpack_SupportGraph.h trilinos-11.12.1-new/packages/ifpack/src/supportgraph/Ifpack_SupportGraph.h
--- trilinos-11.12.1/packages/ifpack/src/supportgraph/Ifpack_SupportGraph.h	2014-10-08 15:14:25.000000000 -0600
+++ trilinos-11.12.1-new/packages/ifpack/src/supportgraph/Ifpack_SupportGraph.h	2014-12-05 02:37:53.939103460 -0700
@@ -465,7 +465,12 @@
               if (Randomize_)
               {
                 // Add small random pertubation. 
+#ifdef _WIN32
+// See http://stackoverflow.com/questions/11065861/drand48-on-windows
+                weights[k] *= (1.0 + 1e-8 * (double)rand()/RAND_MAX);
+#else
                 weights[k] *= (1.0 + 1e-8 * drand48());
+#endif
               }
 
 	      k++;
diff -ruN trilinos-11.12.1/packages/ml/src/MLAPI/MLAPI_Workspace.cpp trilinos-11.12.1-new/packages/ml/src/MLAPI/MLAPI_Workspace.cpp
--- trilinos-11.12.1/packages/ml/src/MLAPI/MLAPI_Workspace.cpp	2014-10-08 15:14:26.000000000 -0600
+++ trilinos-11.12.1-new/packages/ml/src/MLAPI/MLAPI_Workspace.cpp	2014-12-05 02:37:53.939103460 -0700
@@ -15,6 +15,8 @@
 #include "MLAPI_Workspace.h"
 #ifdef _MSC_VER
 #include "winprocess.h"
+#elif defined(__MINGW32__)
+#include "windows.h"
 #endif
 
 namespace MLAPI {
diff -ruN trilinos-11.12.1/packages/ml/src/Utils/ml_epetra_utils.cpp trilinos-11.12.1-new/packages/ml/src/Utils/ml_epetra_utils.cpp
--- trilinos-11.12.1/packages/ml/src/Utils/ml_epetra_utils.cpp	2014-10-08 15:14:26.000000000 -0600
+++ trilinos-11.12.1-new/packages/ml/src/Utils/ml_epetra_utils.cpp	2014-12-05 02:37:53.940103438 -0700
@@ -42,6 +42,8 @@
 #endif
 #ifdef _MSC_VER
 # include "winprocess.h"
+#elif defined(__MINGW32__)
+# include "windows.h"
 #endif
 
 #ifdef HAVE_ML_TEUCHOS
diff -ruN trilinos-11.12.1/packages/ml/src/Utils/ml_utils.c trilinos-11.12.1-new/packages/ml/src/Utils/ml_utils.c
--- trilinos-11.12.1/packages/ml/src/Utils/ml_utils.c	2014-10-08 15:14:26.000000000 -0600
+++ trilinos-11.12.1-new/packages/ml/src/Utils/ml_utils.c	2014-12-05 02:37:53.940103438 -0700
@@ -1956,13 +1956,15 @@
       if (i == mypid) {
 #if defined(TFLOP) || defined(JANUS_STLPORT) || defined(COUGAR)
         sprintf(buf, "Host: %s   PID: %d", "janus", getpid());
+#elif defined(__MINGW32__)
+        sprintf(buf, "Host: %s   PID: %d", "mingw", getpid());
 #else
         gethostname(hostname, sizeof(hostname));
         sprintf(buf, "Host: %s   PID: %d (mpi task %d)", hostname, getpid(),mypid);
 #endif
         printf("%s\n",buf);
         fflush(stdout);
-#ifdef ICL
+#if defined(ICL) || defined(__MINGW32__)
         Sleep(1);
 #else
         sleep(1);
diff -ruN trilinos-11.12.1/packages/seacas/libraries/exodus/cbind/include/exodusII.h trilinos-11.12.1-new/packages/seacas/libraries/exodus/cbind/include/exodusII.h
--- trilinos-11.12.1/packages/seacas/libraries/exodus/cbind/include/exodusII.h	2014-10-08 15:14:28.000000000 -0600
+++ trilinos-11.12.1-new/packages/seacas/libraries/exodus/cbind/include/exodusII.h	2014-12-05 02:38:04.543868633 -0700
@@ -51,7 +51,12 @@
 
 #include <stddef.h>
 #include <stdlib.h>
-#include <stdint.h>
+#ifdef WIN32
+  typedef __int64 int64_t;
+  #define PRId64 "%ld"
+#else
+  #include <stdint.h>
+#endif
 
 #ifndef NC_INT64
 #error "NetCDF version 4.1.2 or later is required."
diff -ruN trilinos-11.12.1/packages/seacas/libraries/exodus/cbind/src/ex_create_par.c trilinos-11.12.1-new/packages/seacas/libraries/exodus/cbind/src/ex_create_par.c
--- trilinos-11.12.1/packages/seacas/libraries/exodus/cbind/src/ex_create_par.c	2014-10-08 15:14:28.000000000 -0600
+++ trilinos-11.12.1-new/packages/seacas/libraries/exodus/cbind/src/ex_create_par.c	2014-12-05 02:38:04.543868633 -0700
@@ -127,7 +127,7 @@
 #include <assert.h>
 #include <mpi.h>
 
-#include "netcdf_par.h"
+#include "netcdf.h"
 #include "exodusII.h"
 #include "exodusII_int.h"
 
diff -ruN trilinos-11.12.1/packages/seacas/libraries/exodus/cbind/src/ex_open_par.c trilinos-11.12.1-new/packages/seacas/libraries/exodus/cbind/src/ex_open_par.c
--- trilinos-11.12.1/packages/seacas/libraries/exodus/cbind/src/ex_open_par.c	2014-10-08 15:14:28.000000000 -0600
+++ trilinos-11.12.1-new/packages/seacas/libraries/exodus/cbind/src/ex_open_par.c	2014-12-05 02:38:04.543868633 -0700
@@ -58,7 +58,7 @@
 #include "exodusII.h"                   // for exerrval, ex_err, etc
 #include "exodusII_int.h"               // for EX_FATAL, etc
 #include "netcdf.h"                     // for NC_NOERR, NC_GLOBAL, etc
-#include "netcdf_par.h"                 // for nc_open_par
+//#include "netcdf_par.h"                 // for nc_open_par
 
 
 /*!  
diff -ruN trilinos-11.12.1/packages/seacas/libraries/exodus/cbind/src/ex_put_cmap_params.c trilinos-11.12.1-new/packages/seacas/libraries/exodus/cbind/src/ex_put_cmap_params.c
--- trilinos-11.12.1/packages/seacas/libraries/exodus/cbind/src/ex_put_cmap_params.c	2014-10-08 15:14:28.000000000 -0600
+++ trilinos-11.12.1-new/packages/seacas/libraries/exodus/cbind/src/ex_put_cmap_params.c	2014-12-05 02:38:04.543868633 -0700
@@ -63,7 +63,7 @@
 #include <exodusII_int.h>               // for EX_FATAL, ex_leavedef, etc
 #include <netcdf.h>                     // for NC_NOERR, nc_def_var, etc
 #include <stddef.h>                     // for size_t
-#include <stdint.h>                     // for int64_t
+// #include <stdint.h>                     // for int64_t
 #include <stdio.h>                      // for sprintf
 
 
diff -ruN trilinos-11.12.1/packages/seacas/libraries/nemesis/ne_nemesisI.h trilinos-11.12.1-new/packages/seacas/libraries/nemesis/ne_nemesisI.h
--- trilinos-11.12.1/packages/seacas/libraries/nemesis/ne_nemesisI.h	2014-10-08 15:14:28.000000000 -0600
+++ trilinos-11.12.1-new/packages/seacas/libraries/nemesis/ne_nemesisI.h	2014-12-05 02:38:04.543868633 -0700
@@ -46,7 +46,12 @@
 #endif
 
 #ifndef EXODUS_II_HDR
-#include <stdint.h>
+#ifdef WIN32
+  typedef __int64 int64_t;
+  #define PRId64 "%ld"
+#else
+  #include <stdint.h>
+#endif
   /** Specifies that this argument is the id of an entity: element block, nodeset, sideset, ... */
   typedef int64_t ex_entity_id;
   
diff -ruN trilinos-11.12.1/packages/teuchos/numerics/src/Teuchos_BLAS.cpp trilinos-11.12.1-new/packages/teuchos/numerics/src/Teuchos_BLAS.cpp
--- trilinos-11.12.1/packages/teuchos/numerics/src/Teuchos_BLAS.cpp	2014-10-08 15:14:40.000000000 -0600
+++ trilinos-11.12.1-new/packages/teuchos/numerics/src/Teuchos_BLAS.cpp	2014-12-05 02:38:04.544868611 -0700
@@ -111,7 +111,8 @@
 
 //Explicitly instantiating these templates for windows due to an issue with
 //resolving them when linking dlls.
-#ifdef _WIN32
+// #ifdef _WIN32
+#ifdef _MSC_VER
 #  ifdef HAVE_TEUCHOS_COMPLEX
      template BLAS<long int, std::complex<float> >;
      template BLAS<long int, std::complex<double> >;
diff -ruN trilinos-11.12.1/PackagesList.cmake trilinos-11.12.1-new/PackagesList.cmake
--- trilinos-11.12.1/PackagesList.cmake	2014-10-22 16:53:39.000000000 -0600
+++ trilinos-11.12.1-new/PackagesList.cmake	2014-12-05 02:38:04.544868611 -0700
@@ -184,7 +184,7 @@
 TRIBITS_DISABLE_PACKAGE_ON_PLATFORMS(TriKota Windows)
 TRIBITS_DISABLE_PACKAGE_ON_PLATFORMS(Pamgen Windows)
 TRIBITS_DISABLE_PACKAGE_ON_PLATFORMS(STK Windows)
-TRIBITS_DISABLE_PACKAGE_ON_PLATFORMS(SEACAS Windows)
+# TRIBITS_DISABLE_PACKAGE_ON_PLATFORMS(SEACAS Windows)
 TRIBITS_DISABLE_PACKAGE_ON_PLATFORMS(Anasazi Windows)
 TRIBITS_DISABLE_PACKAGE_ON_PLATFORMS(Zoltan Windows)
 TRIBITS_DISABLE_PACKAGE_ON_PLATFORMS(Isorropia Windows)
diff -ruN trilinos-11.12.1/PackagesList.cmake.orig trilinos-11.12.1-new/PackagesList.cmake.orig
--- trilinos-11.12.1/PackagesList.cmake.orig	1969-12-31 17:00:00.000000000 -0700
+++ trilinos-11.12.1-new/PackagesList.cmake.orig	2014-10-22 16:53:39.000000000 -0600
@@ -0,0 +1,195 @@
+# @HEADER
+# ************************************************************************
+#
+#            Trilinos: An Object-Oriented Solver Framework
+#                 Copyright (2001) Sandia Corporation
+#
+#
+# Copyright (2001) Sandia Corporation. Under the terms of Contract
+# DE-AC04-94AL85000, there is a non-exclusive license for use of this
+# work by or on behalf of the U.S. Government.  Export of this program
+# may require a license from the United States Government.
+#
+# 1. Redistributions of source code must retain the above copyright
+# notice, this list of conditions and the following disclaimer.
+#
+# 2. Redistributions in binary form must reproduce the above copyright
+# notice, this list of conditions and the following disclaimer in the
+# documentation and/or other materials provided with the distribution.
+#
+# 3. Neither the name of the Corporation nor the names of the
+# contributors may be used to endorse or promote products derived from
+# this software without specific prior written permission.
+#
+# THIS SOFTWARE IS PROVIDED BY SANDIA CORPORATION "AS IS" AND ANY
+# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
+# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL SANDIA CORPORATION OR THE
+# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
+# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
+# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
+# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
+# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
+# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
+# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+#
+# NOTICE:  The United States Government is granted for itself and others
+# acting on its behalf a paid-up, nonexclusive, irrevocable worldwide
+# license in this data to reproduce, prepare derivative works, and
+# perform publicly and display publicly.  Beginning five (5) years from
+# July 25, 2001, the United States Government is granted for itself and
+# others acting on its behalf a paid-up, nonexclusive, irrevocable
+# worldwide license in this data to reproduce, prepare derivative works,
+# distribute copies to the public, perform publicly and display
+# publicly, and to permit others to do so.
+#
+# NEITHER THE UNITED STATES GOVERNMENT, NOR THE UNITED STATES DEPARTMENT
+# OF ENERGY, NOR SANDIA CORPORATION, NOR ANY OF THEIR EMPLOYEES, MAKES
+# ANY WARRANTY, EXPRESS OR IMPLIED, OR ASSUMES ANY LEGAL LIABILITY OR
+# RESPONSIBILITY FOR THE ACCURACY, COMPLETENESS, OR USEFULNESS OF ANY
+# INFORMATION, APPARATUS, PRODUCT, OR PROCESS DISCLOSED, OR REPRESENTS
+# THAT ITS USE WOULD NOT INFRINGE PRIVATELY OWNED RIGHTS.
+#
+# ************************************************************************
+# @HEADER
+
+
+
+
+#
+# Define the TriBITS package or not and decide what version of TriBITS to
+# point to.
+#
+IF (TriBITS_SOURCE_DIR)
+  # The TriBITS repo is defined, so let that repo define the TriBITS package.
+  SET(TRIBITS_PACKAGE_LINE)
+  # NOTE: This is the case when Trilinos is just a repo in a larger TriBITS
+  # meta-project that will be pulling in TriBITS as its own repo and that repo
+  # will define the TriBITS package and will ignore the version of TriBITS
+  # under Trilinos/cmake/tribits/.
+ELSEIF(${PROJECT_NAME}_TRIBITS_PACKAGE_USE_TRIBITS_DIR)
+  # There is no TriBITS repo defined so let the Trilinos repo define the
+  # TriBITS package and we want to use the version of TriBITS in
+  # ${PROJECT_NAME}_TRIBITS_DIR.  WARNING: Only use this when
+  # ${PROJECT_NAME}_TRIBITS_DIR is a subdir of ${PROJECT_SOURCE_DIR}!
+  SET(TRIBITS_PACKAGE_LINE
+    TriBITS   "${${PROJECT_NAME}_TRIBITS_DIR}"   PS
+    )
+  # NOTE: We use ${${PROJECT_NAME}_TRIBITS_DIR}, *not* hard-coded
+  # cmake/tribits/ in case we are pointing to a different TriBITS
+  # implementation when doing TriBITS/Trilinos co-development.
+ELSE()
+  # There is no TriBITS repo defined so let the Trilinos repo define the
+  # TriBITS package and use the version of TriBITS in Trilinos for the TriBITS
+  # package, not the one in ${PROJECT_NAME}_TRIBITS_DIR!
+  SET(TRIBITS_PACKAGE_LINE
+    TriBITS   "cmake/tribits"   PS
+    )
+  # NOTE: It is important *not* to use ${PROJECT_NAME}_TRIBITS_DIR when doing
+  # automated CTest/CDash testing where ${PROJECT_NAME}_TRIBITS_DIR is defined
+  # outside of PROJECT_SOURCE_DIR!  We want to be running the inner TriBITS
+  # source build, not the outer TriBITS in this case.  This also maintains
+  # prefect backward compatibility w.r.t. the definition of a TriBITS package
+  # under Trilinos.
+ENDIF()
+
+
+#
+# Define the Trilinos packages
+#
+TRIBITS_REPOSITORY_DEFINE_PACKAGES(
+  ${TRIBITS_PACKAGE_LINE}
+  Teuchos               packages/teuchos                  PS
+  ThreadPool            packages/ThreadPool               PS # Depends on ptheads system library
+  RTOp                  packages/rtop                     PS
+  Gtest                 commonTools/gtest                 SS
+  Kokkos                packages/kokkos                   PS
+  Sacado                packages/sacado                   PS
+  Epetra                packages/epetra                   PS
+  Zoltan                packages/zoltan                   PS
+  Shards                packages/shards                   PS
+  GlobiPack             packages/globipack                PS
+  Triutils              packages/triutils                 PS
+  Tpetra                packages/tpetra                   PS
+  EpetraExt             packages/epetraext                PS
+  Xpetra                packages/xpetra                   PS
+  Thyra                 packages/thyra                    PS
+  OptiPack              packages/optipack                 PS
+  Isorropia             packages/isorropia                PS
+  Pliris                packages/pliris                   PS
+  Claps                 packages/claps                    EX
+  AztecOO               packages/aztecoo                  PS
+  Galeri                packages/galeri                   PS
+  Amesos                packages/amesos                   PS
+  Amesos2               packages/amesos2                  SS
+  Pamgen                packages/pamgen                   PS
+  SEACAS                packages/seacas                   SS # Depends on netcdf, optionally hdf5, xdmf, pamgen
+  Trios                 packages/trios                    EX #temporary
+  Ifpack                packages/ifpack                   PS
+  Komplex               packages/komplex                  PS
+  ML                    packages/ml                       PS
+  Belos                 packages/belos                    PS
+  Anasazi               packages/anasazi                  PS
+  Zoltan2               packages/zoltan2                  SS
+  Ifpack2               packages/ifpack2                  PS
+  ShyLU                 packages/shylu                    EX
+  Stratimikos           packages/stratimikos              PS
+  FEI                   packages/fei                      PS
+  Teko                  packages/teko                     SS
+  RBGen                 packages/rbgen                    PS
+  TriKota               packages/TriKota                  SS
+  Intrepid              packages/intrepid                 PS
+  STK                   packages/stk                      SS # Depends on boost
+  Phalanx               packages/phalanx                  SS
+  Phdmesh               packages/phdmesh                  EX # to be replaced by STK
+  NOX                   packages/nox                      PS
+  Moertel               packages/moertel                  PS
+  MueLu                 packages/muelu                    SS
+  Rythmos               packages/rythmos                  PS
+  MOOCHO                packages/moocho                   PS
+  Aristos               packages/aristos                  EX
+  Stokhos               packages/stokhos                  SS
+  Piro                  packages/piro                     SS
+  Panzer                packages/panzer                   SS
+  Sundance              packages/Sundance                 SS # Could be PS based on deps (BUG: 4669)
+  CTrilinos             packages/CTrilinos                SS # Switched to SS to speed up checkin testing
+  ForTrilinos           packages/ForTrilinos              EX
+  PyTrilinos            packages/PyTrilinos               SS
+  WebTrilinos           packages/WebTrilinos              EX # Should be SS
+  Didasko               packages/didasko                  SS
+  NewPackage            packages/new_package              EX # Should be SS
+  Optika		packages/optika		          SS
+  Mesquite              packages/mesquite                 PS
+  MeshingGenie          packages/meshinggenie             EX
+  TrilinosCouplings     packages/trilinoscouplings        SS
+  FEApp                 demos/FEApp                       SS # Capability demonstration package
+  )
+
+
+#
+# Disable certain packages on certain platforms.
+#
+# NOTE: This just makes the packages experimental 'EX' and therefore still
+# allows the user to enable the package explicitly but the package will not
+# get enabled implicitly.
+#
+
+TRIBITS_DISABLE_PACKAGE_ON_PLATFORMS(MOOCHO Windows)
+TRIBITS_DISABLE_PACKAGE_ON_PLATFORMS(Phalanx Windows)
+TRIBITS_DISABLE_PACKAGE_ON_PLATFORMS(Phdmesh Windows)
+TRIBITS_DISABLE_PACKAGE_ON_PLATFORMS(PyTrilinos Windows)
+TRIBITS_DISABLE_PACKAGE_ON_PLATFORMS(Sundance Windows)
+TRIBITS_DISABLE_PACKAGE_ON_PLATFORMS(Tpetra Windows)
+TRIBITS_DISABLE_PACKAGE_ON_PLATFORMS(Ifpack2 Windows)
+TRIBITS_DISABLE_PACKAGE_ON_PLATFORMS(TriKota Windows)
+TRIBITS_DISABLE_PACKAGE_ON_PLATFORMS(Pamgen Windows)
+TRIBITS_DISABLE_PACKAGE_ON_PLATFORMS(STK Windows)
+TRIBITS_DISABLE_PACKAGE_ON_PLATFORMS(SEACAS Windows)
+TRIBITS_DISABLE_PACKAGE_ON_PLATFORMS(Anasazi Windows)
+TRIBITS_DISABLE_PACKAGE_ON_PLATFORMS(Zoltan Windows)
+TRIBITS_DISABLE_PACKAGE_ON_PLATFORMS(Isorropia Windows)
+TRIBITS_DISABLE_PACKAGE_ON_PLATFORMS(Teko Windows)
+TRIBITS_DISABLE_PACKAGE_ON_PLATFORMS(Mesquite AIX)
+TRIBITS_DISABLE_PACKAGE_ON_PLATFORMS(Trios Windows)
+TRIBITS_DISABLE_PACKAGE_ON_PLATFORMS(Xpetra Windows)
+TRIBITS_DISABLE_PACKAGE_ON_PLATFORMS(Panzer Windows)
