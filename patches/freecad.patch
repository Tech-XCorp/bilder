diff --git a/src/3rdParty/salomesmesh/inc/StdMeshers_RadialPrism_3D.hxx b/src/3rdParty/salomesmesh/inc/StdMeshers_RadialPrism_3D.hxx
index d0c7835..49d0c5d 100644
--- a/src/3rdParty/salomesmesh/inc/StdMeshers_RadialPrism_3D.hxx
+++ b/src/3rdParty/salomesmesh/inc/StdMeshers_RadialPrism_3D.hxx
@@ -49,7 +49,7 @@ public:
                                const TopoDS_Shape&                  aShape,
                                SMESH_Hypothesis::Hypothesis_Status& aStatus);
 
-  virtual bool Compute(SMESH_Mesh& aMesh, const TopoDS_Shape& aShape);
+  // virtual bool Compute(SMESH_Mesh& aMesh, const TopoDS_Shape& aShape);
 
 protected:
 
diff --git a/src/3rdParty/salomesmesh/src/StdMeshers/StdMeshers_RadialPrism_3D.cpp b/src/3rdParty/salomesmesh/src/StdMeshers/StdMeshers_RadialPrism_3D.cpp
index 133b681..e58dee4 100644
--- a/src/3rdParty/salomesmesh/src/StdMeshers/StdMeshers_RadialPrism_3D.cpp
+++ b/src/3rdParty/salomesmesh/src/StdMeshers/StdMeshers_RadialPrism_3D.cpp
@@ -147,6 +147,7 @@ bool StdMeshers_RadialPrism_3D::CheckHypothesis(SMESH_Mesh&
 //purpose  : 
 //=======================================================================
 
+/*
 bool StdMeshers_RadialPrism_3D::Compute(SMESH_Mesh& aMesh, const TopoDS_Shape& aShape)
 {
   TopExp_Explorer exp;
@@ -241,6 +242,7 @@ bool StdMeshers_RadialPrism_3D::Compute(SMESH_Mesh& aMesh, const TopoDS_Shape& a
 
   return true;
 }
+*/
 
 //================================================================================
 /*!
diff --git a/src/Mod/Part/App/TopoShapeSolidPyImp.cpp b/src/Mod/Part/App/TopoShapeSolidPyImp.cpp
index 8af8b13..41a747c 100644
--- a/src/Mod/Part/App/TopoShapeSolidPyImp.cpp
+++ b/src/Mod/Part/App/TopoShapeSolidPyImp.cpp
@@ -173,6 +173,7 @@ Py::Dict TopoShapeSolidPy::getPrincipalProperties(void) const
     return dict;
 }
 
+/*
 Py::Object TopoShapeSolidPy::getOuterShell(void) const
 {
     TopoDS_Shell shell;
@@ -181,6 +182,7 @@ Py::Object TopoShapeSolidPy::getOuterShell(void) const
         shell = BRepTools::OuterShell(TopoDS::Solid(shape));
     return Py::Object(new TopoShapeShellPy(new TopoShape(shell)),true);
 }
+*/
 
 PyObject* TopoShapeSolidPy::getMomentOfInertia(PyObject *args)
 {
