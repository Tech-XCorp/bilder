diff -ruN --new-file muparser-v2_2_3/CMakeLists.txt muparser-v2_2_3-new/CMakeLists.txt
--- muparser-v2_2_3/CMakeLists.txt	1969-12-31 17:00:00.000000000 -0700
+++ muparser-v2_2_3-new/CMakeLists.txt	2014-11-07 11:06:57.391957373 -0700
@@ -0,0 +1,77 @@
+###################################################
+#
+# CMakeLists.txt for muparser
+#
+###################################################
+
+# Project information
+project(muparser)
+set(VERSION_MAJOR "2")
+set(VERSION_MINOR "2")
+set(VERSION_PATCH "3")
+set(VERSION ${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH})
+
+###################################################
+
+# Required version
+cmake_minimum_required(VERSION 2.8.8)
+
+###################################################
+#
+# Usual initialization stuff
+#
+###################################################
+
+set(MUPARSER_VERSION "${VERSION}-${PROJECT_REV}")
+
+#######################################################
+#
+# Options
+#
+#######################################################
+
+option(BUILD_SHARED_LIBS "Build shared library" OFF)
+option(BUILD_WITH_SHARED_RUNTIME 
+	     "Build with shared runtime (Windows only)" OFF)
+
+if (WIN32 AND NOT BUILD_WITH_SHARED_RUNTIME)
+	# By default CMake will use /MD, our default is /MT
+  string(REPLACE "/MD" "/MT" CMAKE_CXX_FLAGS_RELEASE ${CMAKE_CXX_FLAGS_RELEASE})
+  string(REPLACE "/MD" "/MT" CMAKE_CXX_FLAGS_DEBUG ${CMAKE_CXX_FLAGS_DEBUG})
+endif ()
+message(STATUS "CMAKE_CXX_FLAGS_RELEASE = ${CMAKE_CXX_FLAGS_RELEASE}")
+
+if (BUILD_SHARED_LIBS AND WIN32)
+# On windows define so that decl_spec stuff is done
+  add_definitions(-DUSINGDLL)
+endif ()
+
+###################################################
+#
+# Find packages and set includes
+#
+###################################################
+
+# None
+
+######################################################################
+#
+# Includes for all directories
+#
+######################################################################
+
+include_directories(
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_CURRENT_SOURCE_DIR}
+)
+
+###################################################
+#
+# Subdirectories
+#
+###################################################
+
+# Use a variable to collect source and header files
+add_subdirectory(src)
+add_subdirectory(include)
+
diff -ruN --new-file muparser-v2_2_3/include/CMakeLists.txt muparser-v2_2_3-new/include/CMakeLists.txt
--- muparser-v2_2_3/include/CMakeLists.txt	1969-12-31 17:00:00.000000000 -0700
+++ muparser-v2_2_3-new/include/CMakeLists.txt	2014-11-07 11:07:06.639930884 -0700
@@ -0,0 +1,31 @@
+######################################################################
+#
+# CMakeLists.txt for muparser library 
+#
+# $Id: $
+#
+######################################################################
+
+include_directories(${CMAKE_CURRENT_SOURCE_DIR}
+                    ${PROJECT_BINARY_DIR}
+)
+
+set(HEADER_FILES
+  muParserBase.h
+  muParserBytecode.h
+  muParserCallback.h
+  muParserDef.h
+  muParserDLL.h
+  muParserError.h
+  muParserFixes.h
+  muParser.h
+  muParserInt.h
+  muParserStack.h
+  muParserTemplateMagic.h
+  muParserTest.h
+  muParserToken.h
+  muParserTokenReader.h
+)
+
+# Install headers
+install(FILES ${HEADER_FILES} DESTINATION include)
diff -ruN --new-file muparser-v2_2_3/src/CMakeLists.txt muparser-v2_2_3-new/src/CMakeLists.txt
--- muparser-v2_2_3/src/CMakeLists.txt	1969-12-31 17:00:00.000000000 -0700
+++ muparser-v2_2_3-new/src/CMakeLists.txt	2014-11-07 11:07:19.975892149 -0700
@@ -0,0 +1,35 @@
+######################################################################
+#
+# CMakeLists.txt for muparser library 
+#
+# $Id: $
+#
+######################################################################
+
+include_directories(${CMAKE_CURRENT_SOURCE_DIR}
+                    ${PROJECT_BINARY_DIR}
+                    ${CMAKE_SOURCE_DIR}/include
+)
+
+set(LIB_FILES
+  muParserBase.cpp
+  muParserBytecode.cpp
+  muParserCallback.cpp
+  muParser.cpp
+  muParserDLL.cpp
+  muParserError.cpp
+  muParserInt.cpp
+  muParserTest.cpp
+  muParserTokenReader.cpp
+)
+
+
+# For all linking
+if (BUILD_SHARED_LIBS)
+  add_library(muparser SHARED ${LIB_FILES})
+else ()
+  add_library(muparser STATIC ${LIB_FILES})
+endif ()
+
+# Install library
+install(TARGETS muparser DESTINATION lib)
