diff -ruN qwt-6.1.3/qwtconfig.pri qwt-6.1.3-new/qwtconfig.pri
--- qwt-6.1.3/qwtconfig.pri	2017-01-28 10:50:20.000000000 -0700
+++ qwt-6.1.3-new/qwtconfig.pri	2017-02-19 06:21:12.303567478 -0700
@@ -17,15 +17,14 @@
 ######################################################################
 
 QWT_INSTALL_PREFIX = $$[QT_INSTALL_PREFIX]
+QWT_INSTALL_PREFIX_UNIX  = /usr/local/qwt-$$QWT_VERSION-svn
+QWT_INSTALL_PREFIX_WIN32 = C:/Qwt-$$QWT_VERSION-svn
 
 unix {
-    QWT_INSTALL_PREFIX    = /usr/local/qwt-$$QWT_VERSION-svn
-    # QWT_INSTALL_PREFIX = /usr/local/qwt-$$QWT_VERSION-svn-qt-$$QT_VERSION
+    QWT_INSTALL_PREFIX    = $${QWT_INSTALL_PREFIX_UNIX}
 }
-
 win32 {
-    QWT_INSTALL_PREFIX    = C:/Qwt-$$QWT_VERSION-svn
-    # QWT_INSTALL_PREFIX = C:/Qwt-$$QWT_VERSION-svn-qt-$$QT_VERSION
+    QWT_INSTALL_PREFIX    = $${QWT_INSTALL_PREFIX_WIN32}
 }
 
 QWT_INSTALL_DOCS      = $${QWT_INSTALL_PREFIX}/doc
@@ -35,10 +34,10 @@
 ######################################################################
 # Designer plugin
 # creator/designer load designer plugins from certain default
-# directories ( f.e the path below QT_INSTALL_PREFIX ) and the 
+# directories ( f.e the path below QT_INSTALL_PREFIX ) and the
 # directories listed in the QT_PLUGIN_PATH environment variable.
 # When using the path below QWT_INSTALL_PREFIX you need to
-# add $${QWT_INSTALL_PREFIX}/plugins to QT_PLUGIN_PATH in the 
+# add $${QWT_INSTALL_PREFIX}/plugins to QT_PLUGIN_PATH in the
 # runtime environment of designer/creator.
 ######################################################################
 
@@ -55,12 +54,12 @@
 # Features
 # When building a Qwt application with qmake you might want to load
 # the compiler/linker flags, that are required to build a Qwt application
-# from qwt.prf. Therefore all you need to do is to add "CONFIG += qwt" 
+# from qwt.prf. Therefore all you need to do is to add "CONFIG += qwt"
 # to your project file and take care, that qwt.prf can be found by qmake.
 # ( see http://doc.trolltech.com/4.7/qmake-advanced-usage.html#adding-new-configuration-features )
 # I recommend not to install the Qwt features together with the
 # Qt features, because you will have to reinstall the Qwt features,
-# with every Qt upgrade. 
+# with every Qt upgrade.
 ######################################################################
 
 QWT_INSTALL_FEATURES  = $${QWT_INSTALL_PREFIX}/features
@@ -75,15 +74,15 @@
 QWT_CONFIG           += QwtDll
 
 ######################################################################
-# QwtPlot enables all classes, that are needed to use the QwtPlot 
-# widget. 
+# QwtPlot enables all classes, that are needed to use the QwtPlot
+# widget.
 ######################################################################
 
 QWT_CONFIG       += QwtPlot
 
 ######################################################################
 # QwtWidgets enables all classes, that are needed to use the all other
-# widgets (sliders, dials, ...), beside QwtPlot. 
+# widgets (sliders, dials, ...), beside QwtPlot.
 ######################################################################
 
 QWT_CONFIG     += QwtWidgets
@@ -102,10 +101,10 @@
 QWT_CONFIG     += QwtOpenGL
 
 ######################################################################
-# You can use the MathML renderer of the Qt solutions package to 
+# You can use the MathML renderer of the Qt solutions package to
 # enable MathML support in Qwt. Because of license implications
 # the ( modified ) code of the MML Widget solution is included and
-# linked together with the QwtMathMLTextEngine into an own library. 
+# linked together with the QwtMathMLTextEngine into an own library.
 # To use it you will have to add "CONFIG += qwtmathml"
 # to your qmake project file.
 ######################################################################
@@ -113,7 +112,7 @@
 #QWT_CONFIG     += QwtMathML
 
 ######################################################################
-# If you want to build the Qwt designer plugin, 
+# If you want to build the Qwt designer plugin,
 # enable the line below.
 # Otherwise you have to build it from the designer directory.
 ######################################################################
@@ -125,7 +124,7 @@
 # of linking it against the shared Qwt library. Has no effect
 # when QwtDesigner or QwtDll are not both enabled.
 #
-# On systems where rpath is supported ( all Unixoids ) the 
+# On systems where rpath is supported ( all Unixoids ) the
 # location of the installed Qwt library is compiled into the plugin,
 # but on Windows it might be easier to have a self contained
 # plugin to avoid any hassle with configuring the runtime
@@ -144,10 +143,10 @@
 #QWT_CONFIG     += QwtExamples
 
 ######################################################################
-# The playground is primarily intended for the Qwt development 
+# The playground is primarily intended for the Qwt development
 # to explore and test new features. Nevertheless you might find
 # ideas or code snippets that help for application development
-# If you want to auto build the applications in playground, enable 
+# If you want to auto build the applications in playground, enable
 # the line below.
 # Otherwise you have to build them from the playground directory.
 ######################################################################
@@ -155,14 +154,14 @@
 #QWT_CONFIG     += QwtPlayground
 
 ######################################################################
-# When Qt has been built as framework qmake wants 
+# When Qt has been built as framework qmake wants
 # to link frameworks instead of regular libs
 ######################################################################
 
 macx:!static:CONFIG(qt_framework, qt_framework|qt_no_framework) {
 
-    QWT_CONFIG += QwtFramework
-}  
+    QWT_CONFIG -= QwtFramework
+}
 
 ######################################################################
 # Create and install pc files for pkg-config
